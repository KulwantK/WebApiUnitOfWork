// <auto-generated />
using System;
using Atom.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Atom.Data.Migrations
{
    [DbContext(typeof(AtomDbContext))]
    [Migration("20210204140224_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Atom.Domain.Entities.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 2, 4, 19, 32, 24, 521, DateTimeKind.Local).AddTicks(2515));

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Balance = 500m,
                            CreationDate = new DateTime(2021, 2, 4, 19, 32, 24, 533, DateTimeKind.Local).AddTicks(9698),
                            Currency = "$"
                        },
                        new
                        {
                            Id = 2L,
                            Balance = 1500m,
                            CreationDate = new DateTime(2021, 2, 4, 19, 32, 24, 534, DateTimeKind.Local).AddTicks(693),
                            Currency = "$"
                        },
                        new
                        {
                            Id = 3L,
                            Balance = 100m,
                            CreationDate = new DateTime(2021, 2, 4, 19, 32, 24, 534, DateTimeKind.Local).AddTicks(699),
                            Currency = "$"
                        },
                        new
                        {
                            Id = 4L,
                            Balance = 45m,
                            CreationDate = new DateTime(2021, 2, 4, 19, 32, 24, 534, DateTimeKind.Local).AddTicks(701),
                            Currency = "$"
                        },
                        new
                        {
                            Id = 5L,
                            Balance = 50m,
                            CreationDate = new DateTime(2021, 2, 4, 19, 32, 24, 534, DateTimeKind.Local).AddTicks(703),
                            Currency = "$"
                        },
                        new
                        {
                            Id = 7L,
                            Balance = 900m,
                            CreationDate = new DateTime(2021, 2, 4, 19, 32, 24, 534, DateTimeKind.Local).AddTicks(707),
                            Currency = "$"
                        },
                        new
                        {
                            Id = 8L,
                            Balance = 90m,
                            CreationDate = new DateTime(2021, 2, 4, 19, 32, 24, 534, DateTimeKind.Local).AddTicks(709),
                            Currency = "$"
                        },
                        new
                        {
                            Id = 9L,
                            Balance = 19m,
                            CreationDate = new DateTime(2021, 2, 4, 19, 32, 24, 534, DateTimeKind.Local).AddTicks(710),
                            Currency = "$"
                        },
                        new
                        {
                            Id = 10L,
                            Balance = 190m,
                            CreationDate = new DateTime(2021, 2, 4, 19, 32, 24, 534, DateTimeKind.Local).AddTicks(712),
                            Currency = "$"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
